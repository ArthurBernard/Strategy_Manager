# Parameters for StrategyManager object
strat_manager_instance :
  strat_name: example_function       # Name of strategy 
  underlying: example_coin           # Code of the underlying e.g BTCUSD 
  frequency: 5     # Frequency in seconds e.g for daily => 86400 seconds
# Parameters for DataRequest object
get_data_instance :
  url_exchange : url_example_exchange # URL of REST API to download data
  kind_request : ticker_example       # Kind to request
  assets :                            # List of assets to download
    - example
  ohlcv : ohlcv        # {o: open, h: high, l: low, c: close, v: volume}
  frequency : 60       # Number of second between two data.
  n_min_obs : 1        # Minimal number of observation to compute signal
  request : False      # If true request REST API else request data base
# Parameters for the strategy function
strategy_instance :
  args_params :          # Optional list of parameters to compute signal
    - para1
  kwargs_params :        # Optional dict of parameters to compute signal
    para2 : 0
# Parameters for set pre_order
pre_order_instance :
  iso_volatility : True    # Money management 
  leverage : 1             # Means max leverage
  current_pos : 0          # Current position of the strategy {1, 0, -1}
# Parameters for SetOrder object
order_instance :
  pair : examplecoin_USD  # Symbol of underlying
  volume : 0              # Max volume to trade.
  exchange : kraken       # Name of the exchange.
  kind_order : limit_only # E.g limit, market or limit_only.
  validate : True   # Doesn't push order if true, just verify parameters